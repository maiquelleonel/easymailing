<?php

/**
 * Implementation of hook_menu().
 */
function easymailing_menu() {
  $items['admin/settings/easymailing'] = array(
    'title' => 'Easy Mailing',
    'description' => 'Configurações do modulo Easy Mailing',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('easymailing_settings_form'),
    'access arguments' => array('easymailing settings'),
  );
  return $items;
}
/**
 * Implementation of hook_help();
 */
function easymailing_help($path='') {
  switch ($path):
    case "admin/help#easymailing":
      return "O módulo Easy Mailing possibilita integrar um webform com o sistema Easy Mailing® da Dinamize.";
    break;
  endswitch;
  return '';

}
/**
 * Implementation of hook_perm()
 */
 function easymailing_perm(){
     return array('Administrar configurações');
 }

/**
 * Implementation of hook_form();
 */
function easymailing_settings_form() {
  $form['easymailing_CON_ID'] = array(
    '#title'         => 'CON_ID',
    '#type'          => 'textfield',
    '#required'      => true,
    '#description'   => 'O <strong>CON_ID</strong> é o <em>ID da sua conta</em> no easy mailing. ' .
                        'Copie o valor que estiver em \'value=""\' no campo correspondente do easy mailing.',
    '#default_value' => variable_get('easymailing_CON_ID',''),
  );
  $form['easymailing_GROUPS'] = array(
    '#title' => 'GROUPS',
    '#type' => 'textarea',
    '#description' => 'Aqui você deve preencher os grupos que vai utilizar na integração. ' .
                      'A sintaxe deve ser um par de <em>código|nome-do-grupo</em> e deve ser digitado um par por linha. <br />' .
                      'Essa configuração possibilita a integração para '
                      ,
    '#default_value' => easymailing_get_groups('show') ,
  );
  $form['easymailing_FORMS'] = array(
    '#title'       => 'Forms',
    '#type'        => 'checkboxes',
    '#description' => 'Selecione os formulários que terão seus dados compartilhados com o Easy Mailing@',
    '#options'     => easymailing_webform_get_all(),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Salvar configuração',
  );

  return $form;
}
/**
 * Implementation of hook_validate();
 */
function easymailing_settings_form_validate($form, &$form_state) {
    foreach($form_state['values'] as $var_name => $value):
        switch($var_name):
            case 'easymailing_GROUPS':
                $allowed_values = _transcript_values($value,'store');
                variable_set($var_name,$allowed_values);
            break;
            case 'easymailing_CON_ID':
                variable_set($var_name,$value);
            break;
            case 'easymailing_FORMS':
                $webforms = easymailing_sanitize_results($value);
                foreach($webforms as $i => $nid):
                    $webforms[$i] = webform_node_load(node_load($nid));
                endforeach;
                pr($webforms);
                exit(0);
            break;
            default:
               continue;
            break;
        endswitch;
    endforeach;
}

function _transcript_values($values,$to_save){
    $ret = array();
    switch($to_save):
        case 'store':
            $vals = explode("\n",$values);
            foreach($vals as $val):
                list($i,$v) = explode('|',$val);
                $ret[$i] = $v;
            endforeach;
            return serialize($ret);
        break;
        case 'show':
            $vals = unserialize($values);
            foreach($vals as $i => $v):
                $ret[] = $i . '|' . $v;
            endforeach;
            return join("\n",$ret);
        break;
        case 'array':
            return unserialize($values);
        break;
        default:
            return array();
        break;
    endswitch;
}

/**
 * Implementation of hook_nodeapi();
 */
function easymailing_nodeapi(&$node,$op,$a3=NULL,$a4=NULL){
    if($node->type == ''):
        switch($op):
            case 'validate':
            break;
            case 'insert':
            break;
        endswitch;
    endif;
}

function easymailing_sanitize_results($values){
    $ret = array();
    foreach ($values as $i => $v):
        if($v > 0) $ret[$i] = $v;
    endforeach;
    return $ret;
}



function easymailing_get_groups($format){
   return _transcript_values(variable_get('easymailing_GROUPS',''),$format);
}

function easymailing_webform_get_all(){
    $results = array();
    $query = db_query("SELECT nid, title FROM {node} WHERE type = '%s'",'webform');
    while($webform = db_fetch_object($query)):
        $results[$webform->nid] = $webform->title;
    endwhile;
    return $results;
}

