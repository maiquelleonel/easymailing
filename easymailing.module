<?php
/**
 * Implementation of hook_menu().
 */
function easymailing_menu() {
  $items['admin/settings/easymailing'] = array(
    'title' => 'Easy Mailing',
    'description' => 'Configurações do modulo Easy Mailing',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('easymailing_settings_form'),
    'access arguments' => array('easymailing settings'),
  );
  return $items;
}
/**
 * Implementation of hook_help();
 */
function easymailing_help($path='') {
  switch ($path):
    case "admin/help#easymailing":
      return "O módulo Easy Mailing possibilita integrar um webform com o sistema Easy Mailing® da Dinamize.";
    break;
  endswitch;
  return '';

}
/**
 * Implementation of hook_perm()
 */
 function easymailing_perm(){
     return array('Administrar configurações do Easy Mailing');
 }

/**
 * Implementation of hook_form();
 */
function easymailing_settings_form() {
  $form['easymailing_CON_ID'] = array(
    '#title'         => 'CON_ID',
    '#type'          => 'textfield',
    '#required'      => true,
    '#description'   => 'O <strong>CON_ID</strong> é o <em>ID da sua conta</em> no easy mailing. ' .
                        'Copie o valor que estiver em \'value=""\' no campo correspondente do easy mailing.',
    '#default_value' => variable_get('easymailing_CON_ID',''),
  );
  $form['easymailing_action'] = array(
    '#title'         => 'Action',
    '#type'          => 'textfield',
    '#required'      => true,
    '#description'   => 'A action do formulário é o endereço para onde os dados do seu cliente serão processados. ',
    '#default_value' => variable_get('easymailing_action',''),
  );
  $form['easymailing_GROUPS'] = array(
    '#title' => 'GROUPS',
    '#type' => 'textarea',
    '#description' => 'Aqui você deve preencher os grupos que vai utilizar na integração. ' .
                      'A sintaxe deve ser um par de <em>código|nome-do-grupo</em> e deve ser digitado um par por linha. <br />' .
                      'Essa configuração possibilita a integração para '
                      ,
    '#default_value' => easymailing_get_groups('show') ,
  );
  $default_values_forms = variable_get('easymailing_FORMS',array());
  $form['easymailing_FORMS'] = array(
    '#title'         => 'Forms',
    '#type'          => 'checkboxes',
    '#description'   => 'Selecione os formulários que terão seus dados compartilhados com o Easy Mailing@',
    '#options'       => easymailing_webform_get_all(),
    '#default_value' => unserialize($default_values_forms),
  );
  $form['easymailing_REDIRECT'] = array(
    '#title' => 'URL de Retorno',
    '#type' => 'textfield',
    '#description' => 'Cadastre a URL de Retorno, se houver. O Easy Mailing® automaticamente redirecionará para ela ou, por padrão, para a home do site.',
    '#default_value' => variable_get('easymailing_REDIRECT',''),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Salvar configuração',
  );

  return $form;
}
/**
 * Implementation of hook_validate();
 */
function easymailing_settings_form_validate($form, &$form_state) {
    foreach($form_state['values'] as $var_name => $value):
        switch($var_name):
            case 'easymailing_GROUPS':
                $allowed_values = _transcript_values($value,'store');
                variable_set($var_name,$allowed_values);
            break;
            case 'easymailing_FORMS':
                $values_to_store = array();
                $webforms = easymailing_sanitize_results($value);
                foreach($webforms as $i => $nid):
                    global $webform_node;
                    $webform_node = node_load($nid);
                    $webform = webform_node_load($webform_node);
                    if(easymailing_validate_webform($webform)):
                        $values_to_store[$i] = $nid;
                    else:
                        $error = true;
                    endif;
                endforeach;
                if(sizeof($values_to_store) && !$error):
                    variable_set($var_name,serialize($values_to_store));
                else:
                    drupal_set_message('O formulário <strong>'.$webform_node->title .'</strong> não possui um campo de email.','error');
                endif;
            break;
            case 'easymailing_CON_ID':
            case 'easymailing_action':
            case 'easymailing_REDIRECT':
                 variable_set($var_name,$value);
            break;
            default:
               continue;
            break;
        endswitch;
    endforeach;
    drupal_set_message('As configurações foram salvas com sucesso!','ok');
}

function easymailing_validate_webform($p_webform){
    global $webform_node;
    $webform = $p_webform['webform'];
    $ret = $error = false;
    if(sizeof($webform['components'])):
        foreach($webform['components'] as $component):
            if(_component_type_is_valid($component)):
                $ret = true;
            else:
                $ret = !$error = true;
            endif;
        endforeach;
        return $ret;
    else:
       drupal_set_message('O formulário <strong>' . $webform_node->title . '</strong> não possui componentes.','error');
       return $ret;
    endif;
}

function _component_type_is_valid($component){
    global $webform_node;
    $ret = false;
    if($component['type'] == 'email'):
        $ret = true;
    elseif(_component_name_is_not_username($component)):
       $message = 'O formulário <strong>' . $webform_node->title . '</strong> não possui um campo chamado nome. ' .
       'Emails sem nome são mais fáceis de cair em SPAM.';
       drupal_set_message($message,'warning');
    endif;
    return $ret;
}

function _component_name_is_not_username($component){
    return !(strpos(drupal_strtolower($component['name']),t('nome')) !== false && $component['type'] == 'textfield');
}

function _transcript_values($values,$to_save){
    $ret = array();
    switch($to_save):
        case 'store':
            $vals = explode("\n",$values);
            foreach($vals as $val):
                list($i,$v) = explode('|',$val);
                $ret[$i] = $v;
            endforeach;
            return serialize($ret);
        break;
        case 'show':
            $vals = unserialize($values);
            foreach($vals as $i => $v):
                $ret[] = $i . '|' . $v;
            endforeach;
            return join("\n",$ret);
        break;
        case 'array':
            return unserialize($values);
        break;
        default:
            return array();
        break;
    endswitch;
}

/**
 * Implementation of hook_webform_submission_insert();
 */
function easymailing_webform_submission_insert($node,$submission){
    $headers = array('Content-Type' => 'application/x-www-form-urlencoded');
    $webforms_senders = unserialize(variable_get('easymailing_FORMS',array()));
    if(sizeof($webforms_senders) && in_array($node->nid,$webforms_senders)):
        $url = variable_get('easymailing_action','');
        if(empty($url)) return;
        $easymailing_params = easymailing_process_submissions_into_params($node,$submission);
        $res = drupal_http_request($url,$headers,$method='POST',$easymailing_params);
    endif;
}


function easymailing_process_submissions_into_params($node,$submission){
    $ret = array();
    foreach($node->webform['components'] as $key => $component):
        switch($component['type']):
            case 'email':
                $ret['SMT_MAIL'] = pos($submission->data[$key]['value']);
            break;
            case 'textfield':
                if(strpos(drupal_strtolower($component['name']),'nome') !== false):
                    $ret['SMT_NOME'] = end($submission->data[$key]['value']);
                endif;
            break;
            default:
                if(strpos(drupal_strtolower($component['name']),'grupo') !== false):
                    $ret['GRUPOS'] = end($submission->data[$key]['value']);
                endif;
            break;
         endswitch;
    endforeach;
    $ret['CON_ID'] = variable_get('easymailing_CON_ID','');
    $ret['SMT_RECEBER'] = 1;
    $ret['DESTINO'] = variable_get('easymailing_REDIRECT','');
    if(!isset($ret['GRUPOS'])) $ret['GRUPOS'] = pos(array_keys(easymailing_get_groups('array')));
    $ret = easymailing_parse_url_params($ret);
    return $ret;
}

function easymailing_parse_url_params($params){
   $ret = array();
   foreach($params as $k => $v)
      $ret[] = $k . '=' . rawurlencode($v);
   return implode('&',$ret);
}

function easymailing_sanitize_results($values){
    $ret = array();
    foreach ($values as $i => $v):
        if($v > 0) $ret[$i] = $v;
    endforeach;
    return $ret;
}

function easymailing_get_groups($format){
   return _transcript_values(variable_get('easymailing_GROUPS',''),$format);
}

function easymailing_webform_get_all(){
    $results = array();
    $query = db_query("SELECT nid, title FROM {node} WHERE type = '%s'",'webform');
    while($webform = db_fetch_object($query)):
        $results[$webform->nid] = $webform->title;
    endwhile;
    return $results;
}

